{"filename":"SafeWear FYP SRS.docx","chunks":["\n\nSoftware Requirements Specification  \n\nfor  \n\n< SafeWear - Smart Wearable Security Device for Women >  \n\nVersion 1.0   \n\nPrepared by Group   9\n\n  \n\nSir Syed University of Engineering & Technology  \n\n  \n\nDate  :  29-12-24\n\nTeam   \n\nMember Name  \n\nPrimary Responsibility  \n\nBisma Asif \n\n\n\nMachine Learning\n\nMuhammad Fareed \n\n\n\nBackend\n\nMuhammad Furqan\n\n\n\nApp Development\n\nSameen Nadir \n\n\n\nFrontend\n\n \n\n \n\n\t  \t  \n\nTable of Contents  \n\n1. Introduction  \n\n\t \t1.1  \tPurpose  \n\n\t \t1.2  \tScope  \n\n\t \t1.3  \tDefinitions, Acronyms and Abbreviations  \n\n        1.4       Acronyms and Abbreviations \n\n \n\n2. Project Planning and Management \n\n2.1      SWOT Analysis \n\n2.2      Gantt Chart  \n\n2.3      Work Breakdown Structure [WBS]  \n\n \n\n \n\n3. Overall Description  \n\n3.1      Product Perspective  \n\n3.2      Product Function \n\n3.3     Operating Environment  \n\n3.4     Design and Implementation Constraints \n\n3.5     Assumptions and Dependencies  \n\n  \n\n4. Requirement Identifying Technique \n\n4.1      Use Case Diag","ct Function \n\n3.3     Operating Environment  \n\n3.4     Design and Implementation Constraints \n\n3.5     Assumptions and Dependencies  \n\n  \n\n4. Requirement Identifying Technique \n\n4.1      Use Case Diagram \n\n4.2      Use Case Description \n\n \n\n5.  Non- Functional Requirements \n\n 5.1       Performance Requirements  \n\n5.2       Safety Requirements  \n\n5.3      Security Requirements  \n\n5.4      Software Quality Attributes  \n\n5.5      Business Rules  \n\n5.6      Interoperability  \n\n5.7      Extensibility  \n\n5.8      Maintainability  \n\n5.9      Portability \n\n5.10    Reusability  \n\n5.11    Installation  \n\n \n\n6. Other Requirements  \n\n6.1        On-line User Documentation and help System Requirements  \n\n6.2        Purchased Requirements \n\n6.3        Licensing Requirements  \n\n6.4        Legal, copyright and other Notices  \n\n6.5       Applicable Standards  \n\n6.6       Reports (Feedback, Invoice, User, Usage, Balance Sheet, Executive Summary etc.)  \n\n    \n\n \n\n7. References \n\n   \n\n   \n\n  \n\n \t  \n\n1. Int"," and other Notices  \n\n6.5       Applicable Standards  \n\n6.6       Reports (Feedback, Invoice, User, Usage, Balance Sheet, Executive Summary etc.)  \n\n    \n\n \n\n7. References \n\n   \n\n   \n\n  \n\n \t  \n\n1. Introduction :\n\n1.1 PurposeThe purpose of this project is to design and develop a smart wearable security device, SafeWear, specifically for women. The device will provide real-time safety monitoring, emergency alerts, and self-defense mechanisms to enhance women's safety in their daily lives.\n\n1.2 ScopeSafeWear aims to bridge the gap in existing safety solutions by integrating real-time monitoring, emergency alerts, and self-defense features into a single stylish and discreet wearable device. The project encompasses both hardware and software development, including wearable device prototyping, backend infrastructure, a mobile app, and AI-powered risk analysis.\n\n1.3 Definitions\n\nSafeWear: A smart wearable security device designed for women's safety.\n\nReal-Time Monitoring: Continuous tracking ","ackend infrastructure, a mobile app, and AI-powered risk analysis.\n\n1.3 Definitions\n\nSafeWear: A smart wearable security device designed for women's safety.\n\nReal-Time Monitoring: Continuous tracking of location and user vitals to detect and respond to emergencies.\n\nSelf-Defense Mechanisms: Features such as alert systems and deterrents integrated into the device for immediate action during emergencies.\n\n1.4 Acronyms and Abbreviations\n\nIoT: Internet of Things\n\nGPS: Global Positioning System\n\nAI: Artificial Intelligence\n\nSDG: Sustainable Development Goal\n\nDjango: A Python-based backend framework\n\nTensorFlow: A machine learning library used for AI model development\n\n\n\n\n\n\n\n  \n\n\n\n\n\n2. Project Planning and Management \n\n2.1      SWOT Analysis \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.2      Gantt Chart  \n\n\n\n\n\n\n\n\n\n2.3  Work Breakdown Structure [WBS]  \n\n\n\n\n\n\n\n\n\n3. Overall Description\n\n3.1 Product Perspective\n\nSafeWear is a next-generation, smart wearable security device designed to ","2      Gantt Chart  \n\n\n\n\n\n\n\n\n\n2.3  Work Breakdown Structure [WBS]  \n\n\n\n\n\n\n\n\n\n3. Overall Description\n\n3.1 Product Perspective\n\nSafeWear is a next-generation, smart wearable security device designed to provide real-time protection and safety for women. Unlike traditional safety measures such as pepper sprays or panic buttons, SafeWear integrates advanced technology, including IoT and AI, into a single stylish and discreet wearable device. It bridges the gap between physical self-defense tools and digital communication by combining multiple safety features in a compact, user-friendly format.\n\nThe product consists of two main components:\n\nHardware: A wearable bracelet equipped with GPS, heartbeat sensors, a microphone and an SOS button.\n\nSoftware: A mobile application that synchronizes with the wearable via Bluetooth/Wi-Fi, providing real-time alerts, location tracking, and emergency contact management.\n\nThis integration of hardware and software ensures seamless functionality, enabling pro","e wearable via Bluetooth/Wi-Fi, providing real-time alerts, location tracking, and emergency contact management.\n\nThis integration of hardware and software ensures seamless functionality, enabling proactive monitoring and rapid response during emergencies.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.2 Product Function\n\nThe key functions of SafeWear include:\n\nReal-Time Location Tracking: The GPS module sends the user’s location to trusted contacts during emergencies.\n\nHeartbeat Monitoring: Detects abnormal activity, such as increased heart rate, and triggers emergency alerts.\n\nEmergency Alerts: The SOS button sends notifications with the user’s GPS location to pre-configured contacts .\n\nAudio Recording: The built-in microphone capture evidence in emergencies.\n\nAI-Based Risk Detection: The device analyzes user behavior and environmental factors to identify potential risks.\n\nSynchronization with Mobile App: The wearable device communicates with a mobile app for configuration, monitoring, and emergency notif"," behavior and environmental factors to identify potential risks.\n\nSynchronization with Mobile App: The wearable device communicates with a mobile app for configuration, monitoring, and emergency notifications.\n\nPower Management: Optimized battery life ensures the device remains operational throughout the day.\n\n\n\n3.3 Operating Environment\n\nThe SafeWear device is designed to operate in the following environments:\n\nPhysical Environment: Outdoor and indoor environments with varying levels of temperature, humidity, and light.\n\nConnectivity: Requires Bluetooth or Wi-Fi to synchronize with the mobile app for non-emergency features. Emergency alerts can function offline by directly activating a cellular module (optional).\n\nUser Interaction: Operable through a simple interface with an SOS button and app configuration, ensuring ease of use even in high-stress situations.\n\n\n\n3.4 Design and Implementation Constraints\n\nHardware Constraints:\n\nCompact design must accommodate sensors, GPS, microphone ","d app configuration, ensuring ease of use even in high-stress situations.\n\n\n\n3.4 Design and Implementation Constraints\n\nHardware Constraints:\n\nCompact design must accommodate sensors, GPS, microphone and battery.\n\nDurability to withstand daily wear and harsh environmental conditions.\n\nBattery optimization for long-lasting usage.\n\nSoftware Constraints:\n\nReal-time communication between the wearable device and the mobile app.\n\nEfficient AI algorithms that do not drain device resources.\n\nSecure data handling to ensure user privacy.\n\nRegulatory Constraints:\n\nCompliance with safety and privacy regulations related to wearable devices and data storage.\n\nBudget Constraints:\n\nLimited funding for hardware components and software development.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.5 Assumptions and Dependencies\n\nAssumptions:\n\nUsers will have access to a smartphone for initial device setup and app integration.\n\nBluetooth/Wi-Fi connectivity will be available for syncing the wearable with the app.\n\nUsers will wear the dev","s:\n\nUsers will have access to a smartphone for initial device setup and app integration.\n\nBluetooth/Wi-Fi connectivity will be available for syncing the wearable with the app.\n\nUsers will wear the device regularly, ensuring its availability in emergencies.\n\n\n\nDependencies:\n\nAvailability of high-quality sensors, GPS modules, and other hardware components.\n\nReliable software frameworks .\n\nCloud services for data storage and real-time processing.\n\nAI libraries (TensorFlow or PyTorch) for risk analysis and prediction.\n\n\n\n\n\n4. Requirement Identifying Technique \n\n4.1      Use Case Diagram \n\n\n\n\n\n4.2      Use Case Description\n\n\n\nUse Case Diagram Description for SafeWear\n\nThe use case diagram outlines the functionality of \"SafeWear,\" a smart wearable security device for women, detailing its interaction with various actors and use cases:\n\n\n\n\n\n\n\nActors\n\nUser: The primary wearer of the device.\n\nAdmin: Manages system updates, data security, and user settings.\n\nTrusted Contact: Receives emergency al","tion with various actors and use cases:\n\n\n\n\n\n\n\nActors\n\nUser: The primary wearer of the device.\n\nAdmin: Manages system updates, data security, and user settings.\n\nTrusted Contact: Receives emergency alerts from the user.\n\nEmergency Services: Contacted during critical emergencies.\n\n\n\nKey Use Cases\n\nEmergency Alert Activation\n\nSends GPS location, alerts trusted contacts, and optionally notifies emergency services.\n\nIncludes: Send GPS Location, Record Audio\n\nExtends: Notify Emergency Services.\n\nVital Signs Monitoring\n\nTracks heartbeat and activity; triggers SOS in case of abnormalities.\n\nApp Synchronization\n\nManages trusted contacts, views incident logs, and configures device settings.\n\nDevice Configuration\n\nSets emergency modes, thresholds for vitals, and connectivity options.\n\nSystem Maintenance\n\nAdmin performs updates, debugs, and ensures data security.\n\nSelf-Defense Activation\n\nActivates alarms or deterrents alongside the SOS alert.\n\n\n\nRelationships\n\nIncludes: Core functionalities like","ance\n\nAdmin performs updates, debugs, and ensures data security.\n\nSelf-Defense Activation\n\nActivates alarms or deterrents alongside the SOS alert.\n\n\n\nRelationships\n\nIncludes: Core functionalities like GPS sharing and audio recording.\n\nExtends: Conditional actions such as notifying emergency services.\n\n\n\nNon-Functional Requirements\n\n\n\n5.1 Performance Requirements\n\nThe wearable device must send an emergency alert within 1-5 seconds of pressing the SOS button.\n\nThe mobile app should respond to user commands with a latency of less than 10 seconds.\n\nBattery life should support at least 12 hours of continuous use under normal conditions.\n\nThe GPS module must maintain accuracy within a 5-meter radius for location tracking.\n\n\n\n5.2 Safety Requirements\n\nThe device must be non-toxic, lightweight, and safe for prolonged skin contact.\n\nThe wearable should not overheat, even during extended use.\n\nEmergency alerts must function even in areas with poor network coverage using fallback SMS or offline ca"," safe for prolonged skin contact.\n\nThe wearable should not overheat, even during extended use.\n\nEmergency alerts must function even in areas with poor network coverage using fallback SMS or offline capabilities.\n\nPhysical buttons must be designed to prevent accidental presses while remaining accessible during emergencies.\n\n\n\n\n\n\n\n5.3 Security Requirements\n\nAll user data, including location and health metrics, must be encrypted during storage and transmission.\n\nAccess to the mobile app must be protected by multi-factor authentication (e.g., password and biometrics).\n\nTrusted contacts and user configurations must remain private and inaccessible to unauthorized users.\n\nSecure communication protocols (e.g., HTTPS) should be used for all data exchange between the device, app, and cloud.\n\n\n\n5.4 Software Quality Attributes\n\nReliability: The system should maintain an uptime of at least 99.5% during operational hours.\n\nUsability: The interface should be intuitive, with a learning curve of less t","oftware Quality Attributes\n\nReliability: The system should maintain an uptime of at least 99.5% during operational hours.\n\nUsability: The interface should be intuitive, with a learning curve of less than 30 minutes for first-time users.\n\nScalability: The backend must support up to 1,000 concurrent users during emergencies.\n\nResilience: The device must automatically recover from temporary connectivity issues.\n\n\n\n5.5 Business Rules\n\nThe system must allow users to add, edit, or delete trusted emergency contacts via the app.\n\nEmergency recordings will be retained on the cloud for a maximum of 30 days, after which they will be automatically deleted unless flagged by the user.\n\nUsers must be notified when their device battery level drops below 20%.\n\n\n\n5.6 Interoperability\n\nThe wearable device must seamlessly integrate with smartphones running Android  and iOS.\n\nThe system should allow third-party integrations, such as emergency services and healthcare providers, through APIs.\n\nData should be","st seamlessly integrate with smartphones running Android  and iOS.\n\nThe system should allow third-party integrations, such as emergency services and healthcare providers, through APIs.\n\nData should be exportable in standard formats like JSON or CSV for further analysis or sharing.\n\n\n\n5.7 Extensibility\n\nThe platform should allow for future feature additions, such as additional sensors or AI-based predictive analytics, without major architectural changes.\n\nThe mobile app should support modular updates for UI/UX improvements and new functionalities.\n\n\n\n5.8 Maintainability\n\nThe system codebase must adhere to clean coding principles, with documentation provided for all major modules.\n\nRegular software updates should be deployable with minimal downtime (<1 hour).\n\nHardware components should allow easy replacement or upgrade without requiring specialized tools.\n\n       \n\n\n\n       5.9 Portability\n\nThe mobile app should function across devices with varying screen sizes and resolutions.\n\nThe wea","w easy replacement or upgrade without requiring specialized tools.\n\n       \n\n\n\n       5.9 Portability\n\nThe mobile app should function across devices with varying screen sizes and resolutions.\n\nThe wearable device must support compatibility with multiple smartphone models and operating systems.\n\nThe backend system must be deployable on both AWS and Google Cloud platforms for flexibility.\n\n\n\n5.10 Reusability\n\nCore modules, such as GPS tracking and emergency notifications, should be designed for reuse in future projects or products.\n\nThe AI algorithms for risk detection should be modular and adaptable for other use cases (e.g., child safety devices).\n\n\n\n5.11 Installation\n\nThe wearable device should require minimal setup, with step-by-step guidance provided via the app.\n\nThe mobile app must be downloadable from official app stores (Google Play and Apple App Store).\n\n\n\nOther Requirements \n\n\n\n 6.1 Online User Documentation and Help System Requirements \n\n- Comprehensive user guides accessible"," downloadable from official app stores (Google Play and Apple App Store).\n\n\n\nOther Requirements \n\n\n\n 6.1 Online User Documentation and Help System Requirements \n\n- Comprehensive user guides accessible via the mobile app and website. \n\n- Step-by-step tutorials for setting up and using the SafeWear device. \n\n- Interactive FAQs and troubleshooting tips for common issues. \n\n\n\n 6.2 Purchased Requirements \n\n- Hardware: Sensors (GPS, heartbeat), microcontrollers, and batteries sourced from trusted vendors. \n\n- Software: Cloud storage (AWS or Google Cloud) and third-party APIs for notifications (e.g., Twilio or SendGrid). \n\n- Licensing for advanced AI libraries like TensorFlow or PyTorch (if applicable). \n\n\n\n\n\n\n\n\n\n 6.3 Licensing Requirements \n\n- Open-source compliance for software components used in development. \n\n- Secure necessary certifications for the wearable hardware \n\n- User license agreements for SafeWear's mobile app and software services. \n\n\n\n 6.4 Legal, Copyright, and Other Notices ","in development. \n\n- Secure necessary certifications for the wearable hardware \n\n- User license agreements for SafeWear's mobile app and software services. \n\n\n\n 6.4 Legal, Copyright, and Other Notices \n\n- Copyright the wearable design and app interface. \n\n- Ensure compliance with GDPR for user data privacy and security. \n\n- Display legal disclaimers, highlighting that SafeWear supplements but doesn’t replace emergency services. \n\n\n\n 6.5 Applicable Standards \n\n- ISO 9001: Quality management for hardware and software development. \n\n- ISO/IEC 27001: Security standards for protecting user data. \n\n- IP67: Water and dust resistance certification for the wearable device. \n\n- Compliance with regional health and safety regulations for wearable technology. \n\n\n\n 6.6 Reports \n\n- User Feedback Reports: Summaries of feedback received for product improvement. \n\n- Usage Reports: Statistics on device usage, including SOS activations and monitoring data. \n\n- Financial Reports: Balance sheets and invoices","Summaries of feedback received for product improvement. \n\n- Usage Reports: Statistics on device usage, including SOS activations and monitoring data. \n\n- Financial Reports: Balance sheets and invoices for development and operational costs. \n\n- Executive Summary Reports: High-level summaries of system performance and user adoption. \n\n\n\n\n\n\n\n\n\n\n\n\n\n7. References \n\n1. Studies on Wearable Safety Devices - Journal of Personal Security Technologies, 2023. \n\n2. AI-Powered Risk Analysis - IEEE Transactions on AI and Human Safety, 2022. \n\n3. Jain, R. A., Patil, A., Nikam, P., More, S., Totewar, S., IoT-Based Smart System for Human Safety, International Journal of Computer Applications, 2017. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}